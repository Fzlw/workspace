{"version":3,"file":"index-ffcd473e.js","sources":["../../../packages/component/src/useForm/index.ts"],"sourcesContent":["import { shallowRef, unref, toRaw, reactive } from 'vue'\nimport { isUndefined, cloneDeep } from 'lodash-es'\nimport { FormItemProps, FormInstance } from 'element-plus'\nimport { FormColumn as OriginFormColumn } from '../Form'\nimport { ExpandColumn, ExcludeColumn } from '../useColumn'\n\nexport type UseFormColumn = ExpandColumn<\n  ExcludeColumn<OriginFormColumn, 'formItemProps'>,\n  Partial<Omit<FormItemProps, 'prop' | 'required'>> & {\n    hidden?: boolean\n    requiredMsg?: string\n    formItemProps?: OriginFormColumn['formItemProps']\n  }\n>\nexport interface FormState<T> {\n  submitting: boolean\n  columns: OriginFormColumn[]\n  model: T\n  // FIXME: 修复 tsconfig.json strict: true 下报错的问题\n  ref?: any\n}\n\nexport type IFormColumn = ExpandColumn<OriginFormColumn, { hidden?: boolean }>\n\nexport const formatFormColumn = (column: UseFormColumn) => {\n  // FIXME: 移除label 使其在传递中保持响应式\n  const { prop, formItemProps, labelWidth, rules, requiredMsg, ...other } = column\n\n  const newColumn: IFormColumn = {\n    ...other,\n    prop,\n    formItemProps: {\n      prop,\n      labelWidth,\n      rules: rules\n        ? rules\n        : requiredMsg\n        ? [\n            {\n              required: true,\n              message: requiredMsg,\n            },\n          ]\n        : void 0,\n      ...formItemProps,\n    },\n  }\n\n  return newColumn\n}\n\nexport interface UseFormOptions<T> {\n  columns: UseFormColumn[]\n  initData?: Partial<T>\n}\n\nexport type SubmitPost<T> = (model: T) => any\n\nexport function useForm<T extends object>(opts: UseFormOptions<T>) {\n  /**\n   * el-form 组件实例\n   */\n  const formRef = shallowRef<FormInstance | null>(null)\n  const originColumn = shallowRef(opts.columns.map((i) => formatFormColumn(i)))\n  const formState: FormState<T> = reactive({\n    submitting: false,\n    // FIXME: Type instantiation is excessively deep and possibly infinite\n    model: { ...(opts.initData ?? null) } as any,\n    columns: unref(originColumn).filter((i) => !i.hidden) as any[],\n    ref(instance: any) {\n      formRef.value = instance?.elForm\n    },\n  })\n\n  /**\n   * 通过prop获取列\n   */\n  const getColumn = (prop: UseFormColumn['prop']) => {\n    for (const i of unref(originColumn)) {\n      if (i.prop === prop) {\n        return i\n      }\n    }\n    return null\n  }\n\n  /**\n   * 通过prop设置列的属性\n   * newVal 可以设置当前prop的表单值\n   */\n  const setColumn = (\n    prop: UseFormColumn['prop'],\n    obj: Partial<ExcludeColumn<UseFormColumn, 'hidden'>> | null,\n    newVal?: any\n  ) => {\n    for (const column of formState.columns) {\n      if (column.prop === prop) {\n        for (const originColumn of opts.columns) {\n          if (originColumn.prop === prop) {\n            const copyColumn = cloneDeep(originColumn)\n            const newColumn = formatFormColumn(Object.assign(copyColumn, obj))\n\n            Object.assign(column, newColumn)\n            break\n          }\n        }\n        break\n      }\n    }\n\n    if (!isUndefined(newVal)) {\n      formState.model[prop as keyof FormState<T>['model']] = newVal\n    }\n  }\n\n  /**\n   * 用于快速更新表单项状态 避免 setColumn 性能问题\n   */\n  const patchColumn = (column: IFormColumn, patch?: Partial<ExcludeColumn<UseFormColumn, 'prop'>>) => {\n    if (patch) {\n      const newColumn = formatFormColumn({\n        ...patch,\n        prop: column.prop,\n        formItemProps: column.formItemProps,\n      } as UseFormColumn)\n\n      Object.assign(column, newColumn)\n    }\n  }\n\n  /**\n   * 表单项的显示隐藏\n   */\n  const toggleColumn = (\n    prop: UseFormColumn['prop'] | UseFormColumn['prop'][] | Record<UseFormColumn['prop'], boolean>,\n    show?: boolean\n  ) => {\n    if (!prop) return\n\n    type KMap = Record<NonNullable<UseFormColumn['prop']>, boolean | undefined>\n\n    const propMap: KMap =\n      typeof prop === 'string'\n        ? ({ [prop]: show } as KMap)\n        : !Array.isArray(prop)\n        ? prop\n        : prop.reduce((map, i) => {\n            !!i && (map[i] = show)\n            return map\n          }, {} as KMap)\n    const newColumns: FormState<T>['columns'] = []\n\n    for (const column of unref(originColumn)) {\n      const iProp = column.prop as NonNullable<UseFormColumn['prop']>\n\n      if (iProp && iProp in propMap) {\n        column.hidden = isUndefined(propMap[iProp]) ? !column.hidden : !propMap[iProp]\n      }\n\n      !column.hidden && newColumns.push(column)\n    }\n\n    formState.columns = newColumns\n  }\n\n  /**\n   * 表单提交\n   */\n  const submit = async (post?: (model: T) => any) => {\n    try {\n      formState.submitting = true\n\n      const valid = (await formRef.value?.validate()) ?? true\n\n      if (valid && post) await post(cloneDeep(toRaw(formState.model)))\n\n      formState.submitting = false\n    } catch (error) {\n      formState.submitting = false\n\n      throw error\n    }\n  }\n\n  /**\n   * 设置表单状态\n   * isReset为true时会重置表单项\n   */\n  const setModel = (obj: Partial<T>, isReset = false) => {\n    if (isReset) {\n      formState.model = cloneDeep(toRaw(obj)) as T\n      formState.columns = unref(originColumn).filter((i) => !i.hidden)\n      formRef.value?.clearValidate()\n      return\n    }\n    formState.model = { ...formState.model, ...obj }\n  }\n\n  const getModel = <K extends keyof T = keyof T>(key: K): T[K] => {\n    return formState.model[key]\n  }\n\n  return {\n    formState,\n    getColumn,\n    setColumn,\n    toggleColumn,\n    submit,\n    setModel,\n    form: formRef,\n    getModel,\n    patchColumn,\n  }\n}\n"],"names":["formatFormColumn","column","prop","formItemProps","labelWidth","rules","requiredMsg","other","useForm","opts","formRef","shallowRef","originColumn","i","formState","reactive","unref","instance","obj","newVal","copyColumn","cloneDeep","newColumn","isUndefined","show","propMap","map","newColumns","iProp","post","_a","toRaw","error","isReset","key","patch"],"mappings":"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"}