{"version":3,"file":"index-fd9769be.js","sources":["../../../packages/component/src/useTable/index.ts"],"sourcesContent":["import { Pagination, BaseResult } from '../types'\nimport { OneTableProps, TableColumn, LoadMode } from '../Table/index'\nimport { reactive, unref, watch, shallowRef, shallowReactive } from 'vue'\nimport { dayjs, TableInstance } from 'element-plus'\nimport { isUndefined } from 'lodash-es'\n\nexport enum Format {\n  dateTime,\n  date,\n}\n\nexport type UseTableColumn<T> = TableColumn<T> & { defaultValue?: string; rFormat?: Format; hidden?: boolean }\n\nexport type TableState<T = unknown> = Pick<OneTableProps<T>, 'data'> &\n  Partial<Pick<OneTableProps<T>, 'loading' | 'selected'>> & {\n    mode: LoadMode\n    pending: boolean\n    columns: UseTableColumn<T>[]\n  }\n\nexport interface UseTableOptions<T, K> {\n  columns: K[]\n  query?: (p: Pagination) => BaseResult<T> | Promise<BaseResult<T>>\n  pagination?: Partial<Pagination>\n  mode?: LoadMode\n  mapColumn?: (i: K) => K\n}\n\nexport const formatToDatetime = (val: any) => dayjs(val).format('YYYY-MM-DD HH:mm:ss')\nexport const formatToDate = (val: any) => dayjs(val).format('YYYY-MM-DD')\n\nexport const defaultFormatter = (cellValue: any, format?: Format, defaultValue?: string) => {\n  if (format === Format.dateTime && cellValue) return formatToDatetime(cellValue)\n  if (format === Format.date && cellValue) return formatToDate(cellValue)\n  if (cellValue === '') return defaultValue\n}\n\nexport const useTable = <T, K extends UseTableColumn<T> = UseTableColumn<T>>(opts: UseTableOptions<T, K>) => {\n  /**\n   * el-table 组件实例\n   */\n  const tableRef = shallowRef<TableInstance | null>(null)\n  const pagination: Pagination = shallowReactive({\n    currentPage: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizes: [10, 20, 30, 40, 50],\n    layout: 'sizes, total, prev, pager, next, jumper',\n    'onUpdate:pageSize'(val: number) {\n      pagination.pageSize = val\n    },\n    'onUpdate:currentPage'(val: number) {\n      pagination.currentPage = val\n    },\n    ...opts.pagination,\n  })\n  const originColumn = shallowRef<TableState<T>['columns']>(\n    opts.columns.map((i) => {\n      const { defaultValue = '-', rFormat, formatter, ...other } = i\n\n      return {\n        ...other,\n        formatter: (row, column, cellValue, index) => {\n          if (formatter) return formatter(row, column, cellValue, index)\n\n          return defaultFormatter(cellValue, rFormat, defaultValue) ?? cellValue ?? defaultValue\n        },\n        ...(i.type === 'index' && {\n          index:\n            i.index ??\n            ((j: number) => {\n              if (opts.mode === LoadMode.infinite) return j + 1\n\n              return (pagination.currentPage - 1) * pagination.pageSize + j + 1\n            }),\n        }),\n        ...(opts.mapColumn && opts.mapColumn(i)),\n      }\n    })\n  )\n  const tableState: TableState<T> = reactive({\n    loading: false,\n    pending: false,\n    data: [],\n    selected: [],\n    columns: unref(originColumn).filter((i) => !i.hidden),\n    mode: opts.mode ?? LoadMode.single,\n    // 同 Table 组件事件\n    onNext() {\n      if (tableState.mode === LoadMode.infinite) {\n        handleNext()\n      }\n    },\n    'onUpdate:selected'(list: T[]) {\n      tableState.selected = list\n    },\n    ref(instance: any) {\n      tableRef.value = instance?.elTable\n    },\n  })\n\n  /**\n   * 查询\n   */\n  const handleQuery = async (disabledLoading = false) => {\n    if (!opts.query || tableState.pending) return\n\n    try {\n      tableState.pending = true\n      !disabledLoading && (tableState.loading = true)\n\n      const result = await opts.query(unref(pagination))\n      const { list = [], total = 0 } = result ?? {}\n      const page = pagination.currentPage\n\n      tableState.data = page === 1 || tableState.mode === LoadMode.single ? list : tableState.data.concat(list)\n      pagination.total = total || list.length\n      tableState.pending = false\n      tableState.loading = false\n    } catch (error) {\n      tableState.pending = false\n      tableState.loading = false\n\n      throw error\n    }\n  }\n\n  /**\n   * 下一页\n   */\n  const handleNext = () => {\n    const { currentPage, pageSize, total = 0 } = pagination\n\n    if (!tableState.loading && currentPage * pageSize < total) {\n      pagination.currentPage = currentPage + 1\n    }\n  }\n\n  const setState = (obj: Partial<Pick<TableState<T>, 'data' | 'loading' | 'mode' | 'selected'>>) => {\n    for (const key in obj) {\n      if (key in tableState) {\n        tableState[key as keyof typeof tableState] = obj[key as keyof typeof obj] as never\n      }\n    }\n  }\n\n  const toggleColumn = (prop: K['prop'] | K['prop'][] | Record<NonNullable<K['prop']>, boolean>, show?: boolean) => {\n    if (!prop) return\n\n    type KMap = Record<NonNullable<K['prop']>, boolean | undefined>\n\n    const propMap: KMap =\n      typeof prop === 'string'\n        ? ({ [prop]: show } as KMap)\n        : !Array.isArray(prop)\n        ? prop\n        : prop.reduce((map, i) => {\n            !!i && (map[i] = show)\n            return map\n          }, {} as KMap)\n    const newColumns: TableState<T>['columns'] = []\n\n    for (const column of unref(originColumn)) {\n      const iProp = column.prop as NonNullable<K['prop']>\n\n      if (iProp && iProp in propMap) {\n        column.hidden = isUndefined(propMap[iProp]) ? !column.hidden : !propMap[iProp]\n      }\n\n      !column.hidden && newColumns.push(column)\n    }\n\n    tableState.columns = newColumns\n  }\n\n  watch(\n    () => [pagination.currentPage],\n    () => handleQuery()\n  )\n\n  return {\n    tableState,\n    pagination,\n    table: tableRef,\n    handleQuery,\n    handleNext,\n    setState,\n    toggleColumn,\n  }\n}\n"],"names":["Format","Format2","formatToDatetime","val","dayjs","cellValue","format","defaultValue","formatToDate","opts","tableRef","shallowRef","pagination","shallowReactive","originColumn","i","rFormat","formatter","other","row","column","index","defaultFormatter","j","LoadMode","tableState","reactive","unref","handleNext","list","instance","handleQuery","disabledLoading","result","total","page","error","currentPage","pageSize","setState","obj","key","toggleColumn","prop","show","propMap","map","newColumns","iProp","isUndefined","watch"],"mappings":"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"}