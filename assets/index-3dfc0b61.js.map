{"version":3,"file":"index-3dfc0b61.js","sources":["../../../packages/component/src/useTable/index.ts"],"sourcesContent":["import { Pagination, BaseResult } from '../types'\nimport { OneTableProps, TableColumn } from '../Table/index'\nimport { reactive, unref, watch } from 'vue'\nimport { dayjs } from 'element-plus'\n\nexport enum LoadMode {\n  single,\n  infinite,\n}\n\nexport enum Format {\n  dateTime,\n  date,\n}\n\nexport type UseTableColumn<T> = TableColumn<T> & { defaultValue?: string; rFormat?: Format }\n\nexport type TableState<T = unknown> = Pick<OneTableProps<T>, 'data' | 'columns'> &\n  Partial<Pick<OneTableProps<T>, 'loading' | 'selected'>> & { mode: LoadMode }\n\nexport interface UseTableOptions<T, K> {\n  columns: K[]\n  query: (p: Pagination) => BaseResult<T> | Promise<BaseResult<T>>\n  pagination?: Partial<Pagination>\n  mode?: LoadMode\n  mapColumn?: (i: K) => K\n}\n\nexport const defaultFormatter = (cellValue: any, format?: Format, defaultValue?: string) => {\n  if (format === Format.dateTime && cellValue) return dayjs(cellValue).format('YYYY-MM-DD HH:mm:ss')\n  if (format === Format.date && cellValue) return dayjs(cellValue).format('YYYY-MM-DD')\n  if (cellValue === '') return defaultValue\n}\n\nexport const useTable = <T, K extends UseTableColumn<T> = UseTableColumn<T>>(opts: UseTableOptions<T, K>) => {\n  const pagination: Pagination = reactive({\n    currentPage: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizes: [10, 20, 30, 40, 50],\n    layout: 'sizes, total, prev, pager, next, jumper',\n    'onUpdate:pageSize'(val: number) {\n      pagination.pageSize = val\n    },\n    'onUpdate:currentPage'(val: number) {\n      pagination.currentPage = val\n    },\n    ...opts.pagination,\n  })\n  const tableState: TableState<T> = reactive({\n    loading: false,\n    data: [],\n    selected: [],\n    columns: opts.columns.map((i) => {\n      const { defaultValue = '-', rFormat, formatter, ...other } = i\n\n      return (\n        opts.mapColumn?.(i) ?? {\n          ...other,\n          formatter: (row, column, cellValue, index) => {\n            if (formatter) return formatter(row, column, cellValue, index)\n\n            return defaultFormatter(cellValue, rFormat, defaultValue) ?? cellValue ?? defaultValue\n          },\n        }\n      )\n    }),\n    mode: opts.mode ?? LoadMode.single,\n    // 同 Table 组件事件\n    onNext() {\n      if (tableState.mode === LoadMode.infinite) {\n        handleNext()\n      }\n    },\n    'onUpdate:selected'(list: T[]) {\n      tableState.selected = list\n    },\n  })\n\n  const handleQuery = async () => {\n    if (!opts.query || tableState.loading) return\n\n    try {\n      tableState.loading = true\n\n      const result = await opts.query(unref(pagination))\n      const { list = [], total = 0 } = result ?? {}\n      const page = pagination.currentPage\n\n      tableState.data = page === 1 || tableState.mode === LoadMode.single ? list : tableState.data.concat(list)\n      pagination.total = total || list.length\n    } catch (error) {\n      console.error(error)\n    }\n\n    tableState.loading = false\n  }\n\n  const handleNext = () => {\n    const { currentPage, pageSize, total = 0 } = pagination\n\n    if (!tableState.loading && currentPage * pageSize < total) {\n      pagination.currentPage = currentPage + 1\n    }\n  }\n\n  watch(() => [pagination.currentPage], handleQuery)\n\n  return {\n    tableState,\n    pagination,\n    handleQuery,\n    handleNext,\n  }\n}\n"],"names":["LoadMode","LoadMode2","Format","Format2","defaultFormatter","cellValue","format","defaultValue","dayjs","useTable","opts","pagination","reactive","val","i","rFormat","formatter","other","_a","row","column","index","tableState","handleNext","list","handleQuery","result","unref","total","page","error","currentPage","pageSize","watch"],"mappings":"kHAOE,IAAAA,GAAAC,IAFUD,EAAAA,EAAAA,OAAAA,CAAAA,EAAAA,SAAAC,EAAAA,EAAA,SAAA,CAAA,EAAA,WAKAA,IACVD,GAAA,CAAA,CAAA,EACAE,GAAAC,IAFUD,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,WAAAC,EAAAA,EAAA,KAAA,CAAA,EAAA,OAkBLA,IACLD,OAA0D,MAAAE,EAAW,CAAAC,EAA4BC,EAAAC,IAAA,CACjG,GAAID,IAAW,GAAeD,EAAW,OAAOG,EAAMH,CAAS,EAAE,OAAO,qBAAY,EACpF,GAAIC,IAAc,GAAAD,EAAW,OAAAG,EAAAH,CAAA,EAAA,OAAA,YAAA,EAC/B,GAAAA,IAAA,GAEa,OAAAE,CACX,EACeE,EAAAC,GAAA,CAAA,MACHC,EAAAC,EAAA,CACV,YAAO,EACP,YACA,MAAQ,EACR,iBAAoB,GAAa,GAAA,EAAA,EAC/B,OAAA,0CACF,oBAAAC,EAAA,YACoCA,CAClC,EACF,uBAAAA,EAAA,GACQ,YAAAA,CACT,EACD,GAAAH,YAA2C,CAAA,IAElCE,EAAA,CACP,WACA,KAAS,CAAA,EACP,SAAQ,CAAe,EAGrB,QAAAF,EAAK,QAAY,IAACI,GAAK,OAAA,KAClB,CAAA,aAAAP,EAAA,IAAA,QAAAQ,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAH,EAAA,QACQI,EAAAR,EAAA,YAAA,YAAAQ,EAAA,KAAAR,EAAMI,MACX,GAAAG,EAAW,UAAO,CAAUE,EAAAC,EAAAf,EAAagB,IAE7CL,EACFA,EAAAG,EAAAC,EAAAf,EAAAgB,CAAA,EACFjB,EAAAC,EAAAU,EAAAR,CAAA,GAAAF,GAAAE,CAEH,CACkB,CAAA,EAEnB,KAASG,EAAA,MAAA,EAEM,QAAA,CACbY,EAAA,OAAA,GACFC,GAEE,EACF,oBAAAC,EAAA,CACDF,EAAA,SAAAE,CAED,CACE,CAAI,EAAmCC,EAAA,SAAA,CAEnC,GAAA,GAAAf,EAAA,OAAAY,EAAA,SAGF,IAAA,CACMA,aACN,MAAMI,EAAkB,MAAAhB,EAAA,MAAAiB,EAAAhB,CAAA,CAAA,EAEb,CAAA,KAAAa,EAAA,GAAgB,MAAAI,EAAA,CAAA,EAAgBF,GAAA,GAChCG,EAAAlB,gBACX,KAAAkB,IAAA,GAAAP,EAAA,OAAA,EAAAE,EAAAF,EAAA,KAAA,OAAAE,CAAA,EACAb,QAAmBiB,GAAAJ,EAAA,MACrB,OAAAM,EAAA,CAEA,QAAA,MAAqBA,CAAA,CACvB,CAEAR,UAAyB,GACvB,EAEIC,EAAuB,IAAA,CACzB,KAAA,CAAA,YAAAQ,aAAuC,MAAAH,EAAA,CAAA,EAAAjB,EACzC,CAAAW,EAAA,SAAAS,EAAAC,EAAAJ,IACFjB,EAAA,YAAAoB,EAAA,EAIA,EACE,OAAAE,EAAA,IAAA,CAAAtB,EAAA,WAAA,EAAAc,CAAA,EACA,CACA,WAAAH,EACA,WAAAX,EACF,YAAAc,EACF,WAAAF"}