{"version":3,"file":"index-73e15c00.js","sources":["../../../packages/component/src/useForm/index.ts"],"sourcesContent":["import { shallowRef, unref, toRaw, reactive, onMounted } from 'vue'\nimport { isUndefined, cloneDeep } from 'lodash-es'\nimport { FormItemProps, FormInstance } from 'element-plus'\nimport { FormColumn as OriginFormColumn } from '../Form'\nimport { ExpandColumn, ExcludeColumn } from '../useColumn'\n\nexport type UseFormColumn = ExpandColumn<\n  ExcludeColumn<OriginFormColumn, 'formItemProps'>,\n  Partial<Omit<FormItemProps, 'prop' | 'required'>> & {\n    hidden?: boolean\n    requiredMsg?: string\n    formItemProps?: OriginFormColumn['formItemProps']\n  }\n>\nexport interface FormState<T> {\n  submitting: boolean\n  columns: OriginFormColumn[]\n  model: T\n  // FIXME: 修复 tsconfig.json strict: true 下报错的问题\n  ref?: any\n}\n\nexport type IFormColumn = ExpandColumn<OriginFormColumn, { hidden?: boolean }>\n\nexport const formatFormColumn = (column: UseFormColumn) => {\n  // FIXME: 移除label 使其在传递中保持响应式\n  const { prop, formItemProps, labelWidth, rules, requiredMsg, ...other } = column\n\n  const newColumn: IFormColumn = {\n    ...other,\n    prop,\n    formItemProps: {\n      prop,\n      labelWidth,\n      rules: rules\n        ? rules\n        : requiredMsg\n        ? [\n            {\n              required: true,\n              message: requiredMsg,\n            },\n          ]\n        : void 0,\n      ...formItemProps,\n    },\n  }\n\n  return newColumn\n}\n\nexport interface UseFormOptions<T> {\n  columns: UseFormColumn[]\n  initData?: Partial<T>\n}\n\nexport type SubmitPost<T> = (model: T) => any\n\nexport function useForm<T extends object>(opts: UseFormOptions<T>) {\n  /**\n   * el-form 组件实例\n   */\n  const formRef = shallowRef<FormInstance | null>(null)\n  const originColumns = shallowRef(opts.columns.map((i) => formatFormColumn(i)))\n  const formState: FormState<T> = reactive({\n    submitting: false,\n    model: {} as any,\n    columns: unref(originColumns).filter((i) => !i.hidden) as any[],\n    ref(instance: any) {\n      formRef.value = instance?.elForm\n    },\n  })\n\n  /**\n   * 通过prop获取列\n   */\n  const getColumn = (prop: UseFormColumn['prop']) => {\n    for (const i of unref(originColumns)) {\n      if (i.prop === prop) {\n        return i\n      }\n    }\n    return null\n  }\n\n  /**\n   * 通过prop设置列的属性\n   * newVal 可以设置当前prop的表单值\n   */\n  const setColumn = (\n    prop: UseFormColumn['prop'],\n    obj: Partial<ExcludeColumn<UseFormColumn, 'hidden'>> | null,\n    newVal?: any\n  ) => {\n    for (const column of formState.columns) {\n      if (column.prop === prop) {\n        for (const originColumn of opts.columns) {\n          if (originColumn.prop === prop) {\n            const copyColumn = cloneDeep(originColumn)\n            const newColumn = formatFormColumn(Object.assign(copyColumn, obj))\n\n            Object.assign(column, newColumn)\n            break\n          }\n        }\n        break\n      }\n    }\n\n    if (!isUndefined(newVal)) {\n      formState.model[prop as keyof FormState<T>['model']] = newVal\n    }\n  }\n\n  /**\n   * 用于快速更新表单项状态 避免 setColumn 性能问题\n   */\n  const patchColumn = (column: IFormColumn, patch?: Partial<ExcludeColumn<UseFormColumn, 'prop'>>) => {\n    if (patch) {\n      const newColumn = formatFormColumn({\n        ...patch,\n        prop: column.prop,\n        formItemProps: column.formItemProps,\n      } as UseFormColumn)\n\n      Object.assign(column, newColumn)\n    }\n  }\n\n  /**\n   * 表单项的显示隐藏\n   */\n  const toggleColumn = (\n    prop: UseFormColumn['prop'] | UseFormColumn['prop'][] | Record<UseFormColumn['prop'], boolean>,\n    show?: boolean\n  ) => {\n    if (!prop) return\n\n    type KMap = Record<NonNullable<UseFormColumn['prop']>, boolean | undefined>\n\n    const propMap: KMap =\n      typeof prop === 'string'\n        ? ({ [prop]: show } as KMap)\n        : !Array.isArray(prop)\n        ? prop\n        : prop.reduce((map, i) => {\n            !!i && (map[i] = show)\n            return map\n          }, {} as KMap)\n    const newColumns: FormState<T>['columns'] = []\n\n    for (const column of unref(originColumns)) {\n      const iProp = column.prop as NonNullable<UseFormColumn['prop']>\n\n      if (iProp && iProp in propMap) {\n        column.hidden = isUndefined(propMap[iProp]) ? !column.hidden : !propMap[iProp]\n      }\n\n      !column.hidden && newColumns.push(column)\n    }\n\n    formState.columns = newColumns\n  }\n\n  /**\n   * 表单提交\n   */\n  const submit = async (post?: (model: T) => any) => {\n    try {\n      formState.submitting = true\n\n      const valid = (await formRef.value?.validate()) ?? true\n\n      if (valid && post) await post(cloneDeep(toRaw(formState.model)))\n\n      formState.submitting = false\n    } catch (error) {\n      formState.submitting = false\n\n      throw error\n    }\n  }\n\n  /**\n   * 设置表单状态\n   * isReset为true时会重置表单项\n   */\n  const setModel = (obj: Partial<T>, isReset = false) => {\n    if (isReset) {\n      const keys: string[] = []\n      const newCols: FormState<T>['columns'] = []\n\n      for (const i of unref(originColumns)) {\n        i.prop && keys.push(i.prop)\n        !i.hidden && newCols.push(i)\n      }\n      for (const key in formState.model) {\n        formState.model[key] = undefined as any\n      }\n\n      formState.columns = newCols\n      // resetFields 会重置为初始值 这里只需清除验证信息即可\n      setTimeout(() => formRef.value?.clearValidate(keys), 0)\n    }\n    for (const key in obj) {\n      formState.model[key] = cloneDeep(obj[key]) as any\n    }\n  }\n\n  const getModel = <K extends keyof T = keyof T>(key: K): T[K] => {\n    return formState.model[key]\n  }\n\n  onMounted(() => {\n    if (opts.initData) {\n      setModel(cloneDeep(opts.initData))\n    }\n  })\n\n  return {\n    formState,\n    getColumn,\n    setColumn,\n    toggleColumn,\n    submit,\n    setModel,\n    form: formRef,\n    getModel,\n    patchColumn,\n    originColumns,\n  }\n}\n"],"names":["formatFormColumn","column","prop","formItemProps","labelWidth","rules","requiredMsg","other","useForm","opts","formRef","shallowRef","originColumns","i","formState","reactive","unref","instance","getColumn","setColumn","obj","newVal","originColumn","copyColumn","cloneDeep","newColumn","isUndefined","patchColumn","patch","toggleColumn","show","propMap","map","newColumns","iProp","submit","post","_a","toRaw","error","setModel","isReset","keys","newCols","key","getModel","onMounted"],"mappings":"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"}