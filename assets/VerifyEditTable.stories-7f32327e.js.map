{"version":3,"file":"VerifyEditTable.stories-7f32327e.js","sources":["../../../packages/component/src/VerifyEditTable/VerifyEditTable.vue","../../../packages/component/src/useVerifyEditTable/index.ts"],"sourcesContent":["<template>\n  <ElForm :model=\"props.model\" ref=\"form\">\n    <OneTable v-bind=\"$attrs\" :columns=\"props.columns\"> </OneTable>\n  </ElForm>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { FormProps, FormInstance, ElForm } from 'element-plus'\nimport { OneTable } from '../Table'\nimport { VerifyEditTableColumn } from './types'\n\nexport interface Props<T = unknown> {\n  model: FormProps['model']\n  columns: VerifyEditTableColumn<T>[]\n}\n\nconst props = defineProps<Props>()\n\nconst form = ref<FormInstance>({} as any)\n\nconst validate: FormInstance['validate'] = (cb) => form.value.validate(cb)\nconst validateField: FormInstance['validateField'] = (props, cb) => form.value.validateField(props, cb)\nconst resetFields: FormInstance['resetFields'] = (props) => form.value.resetFields(props)\nconst scrollToField: FormInstance['scrollToField'] = (prop) => form.value.scrollToField(prop)\nconst clearValidate: FormInstance['clearValidate'] = (props) => form.value.clearValidate(props)\n\ndefineExpose({ validate, validateField, resetFields, scrollToField, clearValidate })\n</script>\n","import { isUndefined } from 'lodash-es'\nimport { h, reactive, ref, toRefs, unref } from 'vue'\nimport { ElFormItem, FormInstance, FormValidateFailure } from 'element-plus'\nimport { ExpandColumn, ExcludeColumn, useColumn } from '../useColumn'\nimport { UseFormColumn, formatFormColumn } from '../useForm'\nimport { UseTableOptions, defaultFormatter, TableState } from '../useTable'\nimport { UseEditTableColumn, EditTableRow, useEditTable } from '../useEditTable'\n\nexport type UseVerifyEditTableColumn<T> = ExpandColumn<UseEditTableColumn<T>, ExcludeColumn<UseFormColumn, 'hidden'>>\n\nexport type UseVerifyEditTableOptions<T> = UseTableOptions<T, UseVerifyEditTableColumn<T>>\n\nexport interface VerifyTableState<T> extends TableState<T> {\n  model: T | null\n  ref: (instance: FormInstance | null) => void\n}\n\nexport const useVerifyEditTable = <T extends EditTableRow>(opts: UseVerifyEditTableOptions<T>) => {\n  const renderColumn = useColumn()\n  const { tableState, editRow, delRow, cancelRow, saveRow, addRow, ...other } = useEditTable<T>({\n    mapColumn(i) {\n      const { formItemProps, editable, formatter, ...other } = formatFormColumn(i) as UseVerifyEditTableColumn<T>\n\n      return {\n        ...other,\n        label: i.label,\n        formatter(row, column, cellValue, index) {\n          if ((isUndefined(editable) || editable === true) && row?._editing) {\n            return h(\n              ElFormItem,\n              {\n                ...formItemProps,\n              },\n              { default: () => renderColumn(row, other) ?? '' }\n            )\n          }\n\n          if (formatter) return formatter(row, column, cellValue, index)\n\n          return defaultFormatter(cellValue, other.rFormat, other.defaultValue) ?? cellValue ?? other.defaultValue\n        },\n      }\n    },\n    ...opts,\n  })\n\n  const verifyForm = ref<FormInstance | null>(null)\n  // @ts-ignore\n  const verifyTableState: VerifyTableState<T> = reactive({\n    ...toRefs(tableState),\n    model: null,\n    ref(instance) {\n      verifyForm.value = instance\n    },\n  })\n\n  const vEditRow: typeof editRow = (row) => {\n    if (verifyTableState.model) return\n\n    verifyTableState.model = row\n\n    editRow(row)\n  }\n\n  const vDelRow: typeof delRow = (row) => {\n    verifyTableState.model = null\n\n    delRow(row)\n  }\n\n  const vCancelRow: typeof cancelRow = (row) => {\n    verifyTableState.model = null\n\n    cancelRow(row)\n  }\n\n  const vSaveRow = async (row: T): Promise<[boolean, FormValidateFailure['fields'] | null]> => {\n    try {\n      const valid = await verifyForm.value?.validate?.()\n\n      if (valid) {\n        verifyTableState.model = null\n\n        saveRow(row)\n      }\n\n      return [!!valid, null]\n    } catch (error) {\n      return [false, error as FormValidateFailure['fields']]\n    }\n  }\n\n  const vAddRow: typeof addRow = (row) => {\n    if (verifyTableState.model) return\n\n    addRow(row)\n  }\n\n  const getEditingRow = () => {\n    return unref(verifyTableState.model)\n  }\n\n  return {\n    editRow: vEditRow,\n    delRow: vDelRow,\n    cancelRow: vCancelRow,\n    saveRow: vSaveRow,\n    addRow: vAddRow,\n    tableState: verifyTableState,\n    getEditingRow,\n    ...other,\n  }\n}\n"],"names":["__props","expose","props","form","ref","props2","cb","prop","useVerifyEditTable","opts","useColumn","tableState","delRow","cancelRow","saveRow","addRow","i","other","other2","row","column","cellValue","index","isUndefined","editable","h","ElFormItem","formItemProps","renderColumn","formatter","defaultFormatter","verifyTableState","reactive","instance","verifyForm","editRow","valid","_b","_a","error","unref"],"mappings":"+eAmBM,MAAAA,EAAO,CAAkB,OAAAC,GAAS,CAExC,MAAMC,IACAC,EAAAC,EAAA,CAAA,CAAA,wBAC4CF,EAAAA,MAAe,0BACZ,CAACG,EAAAC,IAAcH,EAAM,oBAAkBE,EAAAC,CAAA,iBACtCJ,EAAe,MAAA,aAAyB,gBAErEK,GAAAJ,EAA4B,MAAA,cAAAI,CAAA,isBCR7C,MAAcC,EAAiBC,GAAA,CAAyD,QAC/EC,IACL,CAAA,WAAAC,YAA2B,OAAAC,EAAA,UAAAC,EAAW,QAAAC,EAAS,OAAAC,UAAsB,CAEpE,UAAAC,EAAA,CAAA,KACFC,CAAAA,cAAAA,EAAAA,SAAAA,EAAAA,UAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,EAAA,OAEH,GAAUC,EACR,MAAKF,QACI,UAAAG,EAAAC,EAAAC,EAAAC,EAAA,CACL,OAAAC,EAAAC,CAAA,GAAAA,IAAA,MAAAL,GAAA,MAAAA,EAAA,UACAM,EAAAC,EAEA,CACE,GAASC,CACb,EACF,CAAA,QAAA,IAAAC,EAAAT,EAAAD,CAAA,GAAA,EAAA,CAEA,EAEOW,EACTA,EAAAV,EAAAC,EAAAC,EAAAC,CAAA,EACFQ,EAAAT,EAAAH,EAAA,QAAAA,EAAA,YAAA,GAAAG,GAAAH,EAAA,YACF,CAAA,CAED,EAEK,GAAAT,CAEN,CAAA,IACsBL,EAAA,IAAA,EACb2B,EAAAC,EAAA,CACP,KAAcrB,CAAA,EACZ,MAAA,KACF,IAAAsB,EAAA,CACDC,EAAA,MAAAD,CAEK,CACJ,CAAA,EA8CS,MACD,CACR,QAhD4Bd,GAAA,CAE5BY,EAAyB,QAG3BA,EAAA,MAAAZ,EAEMgB,EAAAhB,CAAA,EACJ,EAyCA,OAvCUA,GAAA,CACZY,EAAA,MAAA,KAEMnB,EAAAO,CAAA,CACJ,EAoCA,UAlCaA,GAAA,CACfY,EAAA,MAAA,KAEMlB,EAAAM,CAAA,CACJ,EA+BA,QA9BgB,MAAMA,GAAW,SAE/B,GAAA,CACE,MAAAiB,EAAA,OAAyBC,GAAAC,EAAAJ,EAAA,QAAA,YAAAI,EAAA,WAAA,YAAAD,EAAA,KAAAC,IAEzB,OAAAF,IACFL,EAAA,MAAA,KAEAjB,EAAUK,CAAA,GAEH,CAAC,IAA6C,IAAA,CACvD,OAAAoB,EAAA,CACF,MAAA,CAAA,GAAAA,CAAA,CAEM,CACJ,EAgBA,OAhB4BpB,GAAA,CAE5BY,EAAU,OAGZhB,IACE,EAWA,WAAGgB,EACL,cAXA,IAEOS,EAAAT,EAAA,KAAA,EAUT,GAAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}