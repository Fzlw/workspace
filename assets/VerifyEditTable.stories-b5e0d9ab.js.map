{"version":3,"file":"VerifyEditTable.stories-b5e0d9ab.js","sources":["../../../packages/component/src/useVerifyEditTable/index.ts"],"sourcesContent":["import { isUndefined } from 'lodash-es'\nimport { h, reactive, ref, toRefs, unref } from 'vue'\nimport { ElFormItem, FormInstance, FormValidateFailure } from 'element-plus'\nimport { ExpandColumn, ExcludeColumn, useColumn } from '../useColumn'\nimport { UseFormColumn, formatFormColumn } from '../useForm'\nimport { UseTableOptions, defaultFormatter, TableState } from '../useTable'\nimport { UseEditTableColumn, EditTableRow, useEditTable } from '../useEditTable'\n\nexport type UseVerifyEditTableColumn<T> = ExpandColumn<UseEditTableColumn<T>, ExcludeColumn<UseFormColumn, 'hidden'>>\n\nexport type UseVerifyEditTableOptions<T> = UseTableOptions<T, UseVerifyEditTableColumn<T>>\n\nexport interface VerifyTableState<T> extends TableState<T> {\n  model: T | null\n  ref: (instance: FormInstance | null) => void\n}\n\nexport function useVerifyEditTable<T extends EditTableRow>(opts: UseVerifyEditTableOptions<T>) {\n  const renderColumn = useColumn()\n  const { tableState, editRow, delRow, cancelRow, saveRow, addRow, ...other } = useEditTable<T>({\n    mapColumn(i) {\n      const { formItemProps, editable, formatter, ...other } = formatFormColumn(i) as UseVerifyEditTableColumn<T>\n\n      return {\n        ...other,\n        label: i.label,\n        formatter(row, column, cellValue, index) {\n          if ((isUndefined(editable) || editable === true) && row?._editing) {\n            return h(\n              ElFormItem,\n              {\n                ...formItemProps,\n                label: '',\n              },\n              { default: () => renderColumn(row, other) ?? '' }\n            )\n          }\n\n          if (formatter) return formatter(row, column, cellValue, index)\n\n          return defaultFormatter(cellValue, other.rFormat, other.defaultValue) ?? cellValue ?? other.defaultValue\n        },\n      }\n    },\n    ...opts,\n  })\n\n  const verifyForm = ref<FormInstance | null>(null)\n  // @ts-ignore\n  const verifyTableState: VerifyTableState<T> = reactive({\n    ...toRefs(tableState),\n    model: null,\n    ref(instance) {\n      verifyForm.value = instance\n    },\n  })\n\n  const vEditRow: typeof editRow = (row) => {\n    if (verifyTableState.model) return\n\n    verifyTableState.model = row\n\n    editRow(row)\n  }\n\n  const vDelRow: typeof delRow = (row) => {\n    verifyTableState.model = null\n\n    delRow(row)\n  }\n\n  const vCancelRow: typeof cancelRow = (row) => {\n    verifyTableState.model = null\n\n    cancelRow(row)\n  }\n\n  const vSaveRow = async (row: T): Promise<[boolean, FormValidateFailure['fields'] | null]> => {\n    try {\n      const valid = await verifyForm.value?.validate?.()\n\n      if (valid) {\n        verifyTableState.model = null\n\n        saveRow(row)\n      }\n\n      return [!!valid, null]\n    } catch (error) {\n      return [false, error as FormValidateFailure['fields']]\n    }\n  }\n\n  const vAddRow = (row?: T) => {\n    if (verifyTableState.model) return\n\n    const newRow = addRow(row)\n\n    verifyTableState.model = newRow\n\n    return newRow\n  }\n\n  const hasEditingRow = () => {\n    return !!unref(verifyTableState.model)\n  }\n\n  return {\n    verifyTableState,\n    form: verifyForm,\n    editRow: vEditRow,\n    delRow: vDelRow,\n    cancelRow: vCancelRow,\n    saveRow: vSaveRow,\n    addRow: vAddRow,\n    hasEditingRow,\n    ...other,\n  }\n}\n"],"names":["useVerifyEditTable","opts","useColumn","tableState","delRow","cancelRow","saveRow","addRow","i","other","other2","row","column","cellValue","index","isUndefined","editable","h","ElFormItem","formItemProps","renderColumn","formatter","defaultFormatter","ref","verifyTableState","reactive","instance","verifyForm","editRow","valid","_b","_a","error","newRow","unref"],"mappings":"oYAmBQ,SAAcA,EAAiBC,EAAA,CAAyD,QAC/EC,IACL,CAAA,WAAAC,YAA2B,OAAAC,EAAA,UAAAC,EAAW,QAAAC,EAAS,OAAAC,UAAsB,CAEpE,UAAAC,EAAA,CAAA,KACFC,CAAAA,cAAAA,EAAAA,SAAAA,EAAAA,UAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,EAAA,OAEH,GAAUC,EACR,MAAKF,QACI,UAAAG,EAAAC,EAAAC,EAAAC,EAAA,CACL,OAAAC,EAAAC,CAAA,GAAAA,IAAA,MAAAL,GAAA,MAAAA,EAAA,UACAM,EAAAC,EACK,CAEL,GAAAC,EACE,MAAS,EACb,EACF,CAAA,QAAA,IAAAC,EAAAT,EAAAD,CAAA,GAAA,EAAA,CAEA,EAEOW,EACTA,EAAAV,EAAAC,EAAAC,EAAAC,CAAA,EACFQ,EAAAT,EAAAH,EAAA,QAAAA,EAAA,YAAA,GAAAG,GAAAH,EAAA,YACF,CAAA,CAED,EAEK,GAAAT,CAEN,CAAA,IACsBsB,EAAA,IAAA,EACbC,EAAAC,EAAA,CACP,KAActB,CAAA,EACZ,MAAA,KACF,IAAAuB,EAAA,CACDC,EAAA,MAAAD,CAEK,CACJ,CAAA,EAkDA,MACM,CACN,iBAAAF,EACA,KAAQG,EACR,QAtD4BhB,GAAA,CAE5Ba,EAAyB,QAG3BA,EAAA,MAAAb,EAEMiB,EAAAjB,CAAA,EACJ,EA+CA,OA7CUA,GAAA,CACZa,EAAA,MAAA,KAEMpB,EAAAO,CAAA,CACJ,EA0CA,UAxCaA,GAAA,CACfa,EAAA,MAAA,KAEMnB,EAAAM,CAAA,CACJ,EAqCA,QApCgB,MAAMA,GAAW,SAE/B,GAAA,CACE,MAAAkB,EAAA,OAAyBC,GAAAC,EAAAJ,EAAA,QAAA,YAAAI,EAAA,WAAA,YAAAD,EAAA,KAAAC,IAEzB,OAAAF,IACFL,EAAA,MAAA,KAEAlB,EAAUK,CAAA,GAEH,CAAC,IAA6C,IAAA,CACvD,OAAAqB,EAAA,CACF,MAAA,CAAA,GAAAA,CAAA,CAEM,CACJ,EAsBA,OAtB4BrB,GAAA,CAEtB,GAAAa,QAEN,OAEO,MAAAS,EAAA1B,EAAAI,CAAA,EACT,OAAAa,EAAA,MAAAS,GAGE,EAaF,cAZA,IAEO,CAAA,CAAAC,EAAAV,EAAA,KAAA,EAWT,GAAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}