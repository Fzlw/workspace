{"version":3,"file":"index-380a3b83.js","sources":["../../../packages/component/src/useEditTable/index.ts"],"sourcesContent":["import { useTable, UseTableColumn, defaultFormatter, UseTableOptions, TableState } from '../useTable'\nimport { Column, renderColumn, ExpandColumn } from '../useColumn'\nimport { cloneDeep, isUndefined, isEqual } from 'lodash-es'\nimport { readonly, computed, unref } from 'vue'\n\nexport type UseEditTableColumn<T> = ExpandColumn<Column, UseTableColumn<T> & { editable?: boolean }>\nexport interface EditTableRow {\n  _origin?: Omit<EditTableRow, '_editing' | '_delete' | '_origin'>\n  _editing?: boolean\n  _delete?: boolean\n  _new?: boolean\n  [key: string]: any\n}\n\nexport type UseEditTableOptions<T> = UseTableOptions<T, UseEditTableColumn<T>>\n\nexport const useEditTable = <T extends EditTableRow>(opts: UseTableOptions<T, UseEditTableColumn<T>>) => {\n  const { tableState, setState, ...other } = useTable<T, UseEditTableColumn<T>>({\n    mapColumn(i) {\n      const { formatter, editable, ...other } = i\n\n      return {\n        ...other,\n        formatter(row, column, cellValue, index) {\n          if ((isUndefined(editable) || editable === true) && (row as any)._editing) {\n            return renderColumn(row, i) ?? ''\n          }\n\n          if (formatter) return formatter(row, column, cellValue, index)\n\n          return defaultFormatter(cellValue, other.rFormat, other.defaultValue) ?? cellValue ?? other.defaultValue\n        },\n      }\n    },\n    ...opts,\n    async query(p) {\n      if (!opts.query) return { list: [] }\n\n      const res = await opts.query(p)\n\n      res.list = res.list.map((i) => {\n        const origin = cloneDeep(i)\n\n        return Object.assign(i, { _origin: readonly(origin) })\n      })\n\n      return res\n    },\n  })\n\n  const setColumn = (prop: Column['prop'], obj: Partial<UseEditTableColumn<T>>) => {\n    tableState.columns = tableState.columns.map((i) => {\n      if (i.prop === prop) return Object.assign(i, obj)\n\n      return i\n    })\n  }\n\n  const editRow = (row: T) => {\n    row._editing = true\n  }\n\n  const cancelRow = (row: T) => {\n    if (rowIsAdded(row)) return delRow(row)\n\n    for (const key in row._origin) {\n      row[key as keyof T] = row._origin[key]\n    }\n    row._editing = false\n  }\n\n  const delRow = (row: T) => {\n    row._delete = true\n  }\n\n  const saveRow = (row: T) => {\n    row._editing = false\n  }\n\n  const addRow = (row?: Partial<T>) => {\n    const newRow = { _editing: true, ...(row ?? null), _new: true, _origin: row ? cloneDeep(row) : void 0 } as T\n\n    setState({ data: tableState.data.concat(newRow) })\n\n    return newRow\n  }\n\n  /**\n   * @param row 移动当前项\n   * @param position 移动位置\n   * @param relative true：相对当前位置向前或向后移动 false: 移动到绝对索引位置   默认为true\n   */\n  const moveRow = (row: T, position: number, relative = true) => {\n    const target = unref(tableState).data\n    const last = target.length - 1\n\n    // 绝对模式下 检查索引值\n    if (!relative) {\n      if (position < 0 || position > last) {\n        return\n      }\n    }\n\n    for (let i = 0; i <= last; i++) {\n      if (target[i] === row) {\n        const index = relative ? i + position : position\n        const limitIndex = Math.max(Math.min(index, last), 0)\n        const newTarget = target.slice(0, i).concat(target.slice(i + 1))\n\n        newTarget.splice(limitIndex, 0, target[i])\n        setState({ data: newTarget })\n        break\n      }\n    }\n  }\n\n  const rowIsEditing = (row: T) => {\n    return !!row._editing\n  }\n\n  const rowIsAdded = (row: T) => {\n    return row._new === true\n  }\n\n  /**\n   * 分别对应 删除项, 新增项, 修改项\n   */\n  const getChangedRows = () => {\n    const added: T[] = []\n    const changed: T[] = []\n    const removed: T[] = []\n\n    for (const i of tableState.data) {\n      if (i._delete) {\n        if (!rowIsAdded(i)) {\n          removed.push(unref(i))\n        }\n      } else {\n        if (rowIsAdded(i)) {\n          added.push(unref(i))\n        } else {\n          for (const key in i._origin) {\n            if (!isEqual(i[key], i._origin[key])) {\n              changed.push(unref(i))\n              break\n            }\n          }\n        }\n      }\n    }\n\n    return [removed, added, changed] as const\n  }\n\n  const editTableState = computed<TableState<T>>(() => {\n    const ts = unref(tableState)\n\n    return {\n      ...ts,\n      data: ts.data.filter((i) => !i._delete),\n    }\n  })\n\n  const setEditTableState: typeof setState = (obj) => {\n    if (Array.isArray(obj.data)) {\n      for (const i of obj.data) {\n        i._origin = i._origin ?? cloneDeep(i)\n      }\n    }\n    setState(obj)\n  }\n\n  return {\n    ...other,\n    tableState: editTableState,\n    setColumn,\n    editRow,\n    delRow,\n    cancelRow,\n    saveRow,\n    addRow,\n    rowIsEditing,\n    getChangedRows,\n    rowIsAdded,\n    setState: setEditTableState,\n    moveRow,\n  }\n}\n"],"names":["useEditTable","opts","tableState","setState","other","useTable","i","formatter","editable","row","column","cellValue","index","isUndefined","renderColumn","defaultFormatter","p","res","origin","cloneDeep","readonly","setColumn","prop","obj","editRow","cancelRow","rowIsAdded","delRow","key","saveRow","addRow","newRow","moveRow","position","relative","target","unref","last","limitIndex","newTarget","rowIsEditing","getChangedRows","added","changed","removed","isEqual","editTableState","computed","ts"],"mappings":"0NAgBa,MAAAA,EAAwCC,GAAoD,CACvG,KAAM,CAAE,WAAAC,EAAY,SAAAC,EAAU,GAAGC,CAAA,EAAUC,EAAmC,CAC5E,UAAUC,EAAG,CACX,KAAM,CAAE,UAAAC,EAAW,SAAAC,EAAU,GAAGJ,GAAUE,EAEnC,MAAA,CACL,GAAGF,EACH,UAAUK,EAAKC,EAAQC,EAAWC,EAAO,CACvC,OAAKC,EAAYL,CAAQ,GAAKA,IAAa,KAAUC,EAAY,SACxDK,EAAaL,EAAKH,CAAC,GAAK,GAG7BC,EAAkBA,EAAUE,EAAKC,EAAQC,EAAWC,CAAK,EAEtDG,EAAiBJ,EAAWP,EAAM,QAASA,EAAM,YAAY,GAAKO,GAAaP,EAAM,YAC9F,CAAA,CAEJ,EACA,GAAGH,EACH,MAAM,MAAMe,EAAG,CACb,GAAI,CAACf,EAAK,MAAc,MAAA,CAAE,KAAM,CAAA,GAEhC,MAAMgB,EAAM,MAAMhB,EAAK,MAAMe,CAAC,EAE9B,OAAAC,EAAI,KAAOA,EAAI,KAAK,IAAKX,GAAM,CACvB,MAAAY,EAASC,EAAUb,CAAC,EAEnB,OAAA,OAAO,OAAOA,EAAG,CAAE,QAASc,EAASF,CAAM,EAAG,CAAA,CACtD,EAEMD,CACT,CAAA,CACD,EAEKI,EAAY,CAACC,EAAsBC,IAAwC,CAC/ErB,EAAW,QAAUA,EAAW,QAAQ,IAAKI,GACvCA,EAAE,OAASgB,EAAa,OAAO,OAAOhB,EAAGiB,CAAG,EAEzCjB,CACR,CAAA,EAGGkB,EAAWf,GAAW,CAC1BA,EAAI,SAAW,EAAA,EAGXgB,EAAahB,GAAW,CAC5B,GAAIiB,EAAWjB,CAAG,EAAG,OAAOkB,EAAOlB,CAAG,EAE3B,UAAAmB,KAAOnB,EAAI,QACpBA,EAAImB,CAAc,EAAInB,EAAI,QAAQmB,CAAG,EAEvCnB,EAAI,SAAW,EAAA,EAGXkB,EAAUlB,GAAW,CACzBA,EAAI,QAAU,EAAA,EAGVoB,EAAWpB,GAAW,CAC1BA,EAAI,SAAW,EAAA,EAGXqB,EAAUrB,GAAqB,CACnC,MAAMsB,EAAS,CAAE,SAAU,GAAM,GAAItB,GAAO,KAAO,KAAM,GAAM,QAASA,EAAMU,EAAUV,CAAG,EAAI,QAE/F,OAAAN,EAAS,CAAE,KAAMD,EAAW,KAAK,OAAO6B,CAAM,EAAG,EAE1CA,CAAA,EAQHC,EAAU,CAACvB,EAAQwB,EAAkBC,EAAW,KAAS,CACvD,MAAAC,EAASC,EAAMlC,CAAU,EAAE,KAC3BmC,EAAOF,EAAO,OAAS,EAG7B,GAAI,GAACD,IACCD,EAAW,GAAKA,EAAWI,KAKjC,QAAS/B,EAAI,EAAGA,GAAK+B,EAAM/B,IACrB,GAAA6B,EAAO7B,CAAC,IAAMG,EAAK,CACf,MAAAG,EAAQsB,EAAW5B,EAAI2B,EAAWA,EAClCK,EAAa,KAAK,IAAI,KAAK,IAAI1B,EAAOyB,CAAI,EAAG,CAAC,EAC9CE,EAAYJ,EAAO,MAAM,EAAG7B,CAAC,EAAE,OAAO6B,EAAO,MAAM7B,EAAI,CAAC,CAAC,EAE/DiC,EAAU,OAAOD,EAAY,EAAGH,EAAO7B,CAAC,CAAC,EAChCH,EAAA,CAAE,KAAMoC,CAAA,CAAW,EAC5B,OAEJ,EAGIC,EAAgB/B,GACb,CAAC,CAACA,EAAI,SAGTiB,EAAcjB,GACXA,EAAI,OAAS,GAMhBgC,EAAiB,IAAM,CAC3B,MAAMC,EAAa,CAAA,EACbC,EAAe,CAAA,EACfC,EAAe,CAAA,EAEV,UAAAtC,KAAKJ,EAAW,KACzB,GAAII,EAAE,QACCoB,EAAWpB,CAAC,GACPsC,EAAA,KAAKR,EAAM9B,CAAC,CAAC,UAGnBoB,EAAWpB,CAAC,EACRoC,EAAA,KAAKN,EAAM9B,CAAC,CAAC,MAER,WAAAsB,KAAOtB,EAAE,QACd,GAAA,CAACuC,EAAQvC,EAAEsB,CAAG,EAAGtB,EAAE,QAAQsB,CAAG,CAAC,EAAG,CAC5Be,EAAA,KAAKP,EAAM9B,CAAC,CAAC,EACrB,MAOH,MAAA,CAACsC,EAASF,EAAOC,CAAO,CAAA,EAG3BG,EAAiBC,EAAwB,IAAM,CAC7C,MAAAC,EAAKZ,EAAMlC,CAAU,EAEpB,MAAA,CACL,GAAG8C,EACH,KAAMA,EAAG,KAAK,OAAQ1C,GAAM,CAACA,EAAE,OAAO,CAAA,CACxC,CACD,EAWM,MAAA,CACL,GAAGF,EACH,WAAY0C,EACZ,UAAAzB,EACA,QAAAG,EACA,OAAAG,EACA,UAAAF,EACA,QAAAI,EACA,OAAAC,EACA,aAAAU,EACA,eAAAC,EACA,WAAAf,EACA,SArB0CH,GAAQ,CAClD,GAAI,MAAM,QAAQA,EAAI,IAAI,EACb,UAAAjB,KAAKiB,EAAI,KAClBjB,EAAE,QAAUA,EAAE,SAAWa,EAAUb,CAAC,EAGxCH,EAASoB,CAAG,CAAA,EAgBZ,QAAAS,CAAA,CAEJ"}