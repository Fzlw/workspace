{"version":3,"file":"index-1afa3475.js","sources":["../../../packages/component/src/useTable/index.ts"],"sourcesContent":["import { Pagination, BaseResult } from '../types'\nimport { OneTableProps, TableColumn, LoadMode } from '../Table/index'\nimport { reactive, unref, watch, ref } from 'vue'\nimport { dayjs, TableInstance } from 'element-plus'\n\nexport enum Format {\n  dateTime,\n  date,\n}\n\nexport type UseTableColumn<T> = TableColumn<T> & { defaultValue?: string; rFormat?: Format }\n\nexport type TableState<T = unknown> = Pick<OneTableProps<T>, 'data' | 'columns'> &\n  Partial<Pick<OneTableProps<T>, 'loading' | 'selected'>> & { mode: LoadMode; pending: boolean }\n\nexport interface UseTableOptions<T, K> {\n  columns: K[]\n  query: (p: Pagination) => BaseResult<T> | Promise<BaseResult<T>>\n  pagination?: Partial<Pagination>\n  mode?: LoadMode\n  mapColumn?: (i: K) => K\n}\n\nexport const formatToDatetime = (val: any) => dayjs(val).format('YYYY-MM-DD HH:mm:ss')\nexport const formatToDate = (val: any) => dayjs(val).format('YYYY-MM-DD')\n\nexport const defaultFormatter = (cellValue: any, format?: Format, defaultValue?: string) => {\n  if (format === Format.dateTime && cellValue) return formatToDatetime(cellValue)\n  if (format === Format.date && cellValue) return formatToDate(cellValue)\n  if (cellValue === '') return defaultValue\n}\n\nexport const useTable = <T, K extends UseTableColumn<T> = UseTableColumn<T>>(opts: UseTableOptions<T, K>) => {\n  const tableRef = ref<TableInstance | null>(null)\n  const pagination: Pagination = reactive({\n    currentPage: 1,\n    pageSize: 20,\n    total: 0,\n    pageSizes: [10, 20, 30, 40, 50],\n    layout: 'sizes, total, prev, pager, next, jumper',\n    'onUpdate:pageSize'(val: number) {\n      pagination.pageSize = val\n    },\n    'onUpdate:currentPage'(val: number) {\n      pagination.currentPage = val\n    },\n    ...opts.pagination,\n  })\n  const tableState: TableState<T> = reactive({\n    loading: false,\n    pending: false,\n    data: [],\n    selected: [],\n    columns: opts.columns.map((i) => {\n      const { defaultValue = '-', rFormat, formatter, ...other } = i\n\n      return (\n        opts.mapColumn?.(i) ?? {\n          ...other,\n          formatter: (row, column, cellValue, index) => {\n            if (formatter) return formatter(row, column, cellValue, index)\n\n            return defaultFormatter(cellValue, rFormat, defaultValue) ?? cellValue ?? defaultValue\n          },\n        }\n      )\n    }),\n    mode: opts.mode ?? LoadMode.single,\n    // 同 Table 组件事件\n    onNext() {\n      if (tableState.mode === LoadMode.infinite) {\n        handleNext()\n      }\n    },\n    'onUpdate:selected'(list: T[]) {\n      tableState.selected = list\n    },\n    ref(instance: any) {\n      tableRef.value = instance?.elTable\n    },\n  })\n\n  const handleQuery = async (disabledLoading = false) => {\n    if (!opts.query || tableState.pending) return\n\n    try {\n      tableState.pending = true\n      !disabledLoading && (tableState.loading = true)\n\n      const result = await opts.query(unref(pagination))\n      const { list = [], total = 0 } = result ?? {}\n      const page = pagination.currentPage\n\n      tableState.data = page === 1 || tableState.mode === LoadMode.single ? list : tableState.data.concat(list)\n      pagination.total = total || list.length\n    } catch (error) {\n      console.error(error)\n    }\n\n    tableState.pending = false\n    tableState.loading = false\n  }\n\n  const handleNext = () => {\n    const { currentPage, pageSize, total = 0 } = pagination\n\n    if (!tableState.loading && currentPage * pageSize < total) {\n      pagination.currentPage = currentPage + 1\n    }\n  }\n\n  const setState = (obj: Partial<Pick<TableState<T>, 'data' | 'loading' | 'mode' | 'selected'>>) => {\n    for (const key in obj) {\n      if (key in tableState) {\n        tableState[key as keyof typeof tableState] = obj[key as keyof typeof obj] as never\n      }\n    }\n  }\n\n  watch(\n    () => [pagination.currentPage],\n    () => handleQuery()\n  )\n\n  return {\n    tableState,\n    pagination,\n    table: tableRef,\n    handleQuery,\n    handleNext,\n    setState,\n  }\n}\n"],"names":["Format","Format2","formatToDatetime","val","dayjs","cellValue","format","defaultValue","formatToDate","opts","tableRef","ref","pagination","reactive","tableState","i","rFormat","formatter","other","_a","row","column","index","defaultFormatter","LoadMode","handleNext","list","instance","handleQuery","disabledLoading","result","unref","total","page","error","currentPage","pageSize","setState","obj","key","watch"],"mappings":"gIAOE,IAAAA,GAAAC,IAFUD,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,WAAAC,EAAAA,EAAA,KAAA,CAAA,EAAA,OAkBLA,IACAD,GAAM,CAAA,GAEN,MAAME,EAAoBC,GAAgBC,EAAAD,CAAA,EAAiB,OAA0B,qBAAA,IACxDA,GAAAC,EAAAD,CAAA,EAAA,OAAA,YAAA,IAA4C,CAAAE,EAAAC,EAAAC,IAAA,CAC9E,GAAID,IAAW,GAAeD,EAAW,OAAOH,EAAsBG,CAAA,EACtE,GAAIC,IAAc,GAAAD,EAAW,OAAAG,EAAAH,CAAA,EAC/B,GAAAA,IAAA,GAEa,OAAAE,CACX,IACwCE,GAAA,CAAA,MACzBC,EAAAC,EAAA,IAAA,EACHC,EAAAC,EAAA,CACV,YAAO,EACP,YACA,MAAQ,EACR,iBAAoB,GAAa,GAAA,EAAA,EAC/B,OAAA,0CACF,oBAAAV,EAAA,YACoCA,CAClC,EACF,uBAAAA,EAAA,GACQ,YAAAA,CACT,EACD,GAAAM,YAA2C,CAAA,EAEhCK,EAAAD,EAAA,CACT,QAAO,GACP,WACA,KAAS,CAAA,EACP,SAAQ,CAAe,EAGrB,QAAAJ,EAAK,QAAY,IAACM,GAAK,OAAA,KAClB,CAAA,aAAAR,EAAA,IAAA,QAAAS,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAH,EAAA,QACQI,EAAAV,EAAA,YAAA,YAAAU,EAAA,KAAAV,EAAMM,MACX,GAAAG,EAAW,UAAO,CAAUE,EAAAC,EAAAhB,EAAaiB,IAE7CL,EACFA,EAAAG,EAAAC,EAAAhB,EAAAiB,CAAA,EACFC,EAAAlB,EAAAW,EAAAT,CAAA,GAAAF,GAAAE,CAEH,CAC2B,CAAA,EAE5B,KAASE,EAAA,MAAAe,EAAA,OAEM,QAAA,CACbV,EAAA,OAAAU,EAAA,UACFC,GAEE,EACF,oBAAAC,EAAA,GACmB,SAAAA,CACjB,EACF,IAAAC,EAAA,CACDjB,EAAA,MAAAiB,GAAA,YAAAA,EAAA,OAEK,CACJ,CAAI,EAAmCC,EAAA,MAAAC,EAAA,KAAA,CAEnC,GAAA,GAAApB,EAAA,OAAAK,EAAA,SAED,IAAA,CAEDA,UAAqB,GACf,CAAAe,MAAuB,YAC7B,MAAMC,EAAkB,MAAArB,EAAA,MAAAsB,EAAAnB,CAAA,CAAA,EAEb,CAAA,KAAAc,EAAA,GAAgB,MAAAM,EAAA,CAAA,EAAgBF,GAAA,GAChCG,EAAArB,gBACX,KAAAqB,IAAA,GAAAnB,EAAA,OAAAU,EAAA,OAAAE,EAAAZ,EAAA,KAAA,OAAAY,CAAA,EACAd,QAAmBoB,GAAAN,EAAA,MACrB,OAAAQ,EAAA,CAEA,QAAA,MAAqBA,CAAA,CACrB,CACFpB,EAAA,QAAA,GAEAA,UAAyB,GACvB,EAEIW,EAAuB,IAAA,CACzB,KAAA,CAAA,YAAAU,aAAuC,MAAAH,EAAA,CAAA,EAAApB,EACzC,CAAAE,EAAA,SAAAqB,EAAAC,EAAAJ,IACFpB,EAAA,YAAAuB,EAAA,EAGE,EACEE,EAAuBC,GAAA,CACV,UAAAC,KAA8BD,EAC3CC,KAAAzB,IACFA,EAAAyB,CAAA,EAAAD,EAAAC,CAAA,EAGF,EAC+B,OAAAC,EAE/B,IAAA,CAAA5B,EAAA,WAAA,EAEO,IAAAgB,EAAA,CAAA,EAEL,CACA,WAAAd,EACA,WAAAF,EACA,MAAAF,EACA,YAAAkB,EACF,WAAAH,EACF,SAAAY"}